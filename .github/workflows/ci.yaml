name: CI

# CI on master push event can be safely omitted since all commits must go through a PR and have a linear commit history.
# The only exception is "renovate/**" since it is auto-merged by renovatebot.
# Continual delivery is delegated to Vercel.
on:
  push:
    branches:
      - ci/**
      - renovate/**
  pull_request:
    branches:
      - master

jobs:
  onboard:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Check if skippable
        uses: fkirc/skip-duplicate-actions@master
        id: skip_check
        with:
          paths_ignore: '[".husky", ".vscode", ".commitlintrc.js", ".editorconfig", ".lintstagedrc", "README.md", "renovate.json"]'

  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - onboard
    if: ${{ needs.onboard.outputs.should_skip != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Node.js version from package.json
        run: echo ::set-output name=nodeVersion::$(node -p "require('./package.json').engines.node")
        id: get-node-version
      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeVersion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeVersion }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Lint
        run: yarn lint
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]sx?') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Build app
        run: NODE_ENV=test yarn build
      - name: Build storybook
        run: yarn build-storybook --quiet
      - name: Lighthouse
        uses: treosh/lighthouse-ci-action@v8
        if: ${{ github.event_name == 'pull_request' && github.base_ref == 'master' }}
        id: lighthouse
        with:
          configPath: './.lighthouserc.js'
          uploadArtifacts: true
      - name: Generate lighthouse summary
        if: ${{ github.event_name == 'pull_request' && github.base_ref == 'master' }}
        id: generate_lighthouse_summary
        uses: actions/github-script@v5
        with:
          script: |
            const manifest = ${{ steps.lighthouse.outputs.manifest }};
            const f = d => {
              const i = Math.round(d * 100);
              if(i == null) return `-`;
              if(i >= 90) return `:white_check_mark: ${i}`;
              if(i >= 50) return `:warning: ${i}`;
              return `:exclamation: ${i}`;
            };
            const comment = [
              `:zap: Lighthouse Report :zap:`,
              ``,
              `|    | Performance | Accessibility | Best Practices | SEO | PWA |`,
              `| :- | :---------: | :-----------: | :------------: | :-: | :-: |`,
              ...manifest.map(({ url, summary }) => (
                `| ${url.replace(/^https?:\/\/[^\/]+/, '')} | ${f(summary.performance)} | ${f(summary.accessibility)} | ${f(summary['best-practices'])} | ${f(summary.seo)} | ${f(summary.pwa)} |`
              )),
              ``,
              `View full report by downloading artifacts at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`,
            ].join(`\n`);
            core.setOutput(`comment`, comment);
      - name: Post lighthouse summary
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ github.event_name == 'pull_request' && github.base_ref == 'master' }}
        with:
          number: ${{ github.event.issue.number }}
          message: ${{ steps.generate_lighthouse_summary.outputs.comment }}
